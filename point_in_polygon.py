# Winding number point-in-polygon algorithm (as per Dan Sunday, 2001)

# Function to test if a point is left or right of, or on, an edge.
#   - Inputs: 3 Points (edge_point_a, edge_point_b, point to test)
#       - A point is a tuple that has at least (X,Y) coordinates. Other values (z, h, n, m, ...) can exist but are not used. 
#       - X & Y must have values and their indices must be X:0, Y:1
#       - Edge is considered to be an infinite line passing through edge points
#   - Returns: 
#       > 0 for point that is left of the edge
#       = 0 for point that is on the edge
#       < 0 for point that is right of the edge
def is_left(edge_point_a, edge_point_b, point):
    return ((edge_point_b[0] - edge_point_a[0]) * (point[1] - edge_point_a[1]) - (point[0] -  edge_point_a[0]) * (edge_point_b[1] - edge_point_a[1]))


# Function to parse WKT geometries to tuples:
def geometryparser(wkt):
    ret = None

    # Point:
    if (wkt[:5].upper() == "POINT"):
        ret = wkt[5:].strip("() ").split(" ")
        ret = (float(ret[0]), float(ret[1]))

    # Polygon:
    elif (wkt[:7].upper() == "POLYGON"):
        tmp_array = []
        ret = wkt[7:].strip("() ").replace("(", "").replace(")", "")
        for i in ret.split(","):
            tmp = i.strip().split(" ")
            tmp_array.append((float(tmp[0]), float(tmp[1])))
        ret = tuple(tmp_array)

    # Other geometry types are not supported, terminate:
    else:
        print("Invalid geometry type. Exiting.")
        exit()

    return ret


# Winding number point-in-polygon test
# Inputs: a point and a polygon in WKT format
#   - Both inputs must be in the same CRS to get sane results
# Returns:
#   - True (point is inside polygon) or
#   - False (point is outside of polygon)
# A point that is exactly on the edge of polygon is considered to be either inside or outside
#   - in order to achieve constant behavior I recommend using another algorithm to catch points on the edge 
def point_in_polygon(point_wkt, polygon_wkt):
    counter = 0     # Winding number counter
    ret = True      # Return value

    # Convert WKT geometries to tuples:
    point = geometryparser(point_wkt)
    polygon = geometryparser(polygon_wkt)

    # Bounding box check to rule out obvious (outside-) cases:
    xarray = []     # Array to hold polygon x-coordinates
    yarray = []     # Array to hold polygon y-coordinates

    # Append all x/y coordinates to corresponding array:
    for i in polygon:
        xarray.append(i[0])
        yarray.append(i[1])

    # Bounding box: ((minx, miny), (maxx, maxy))
    bbox = ((min(xarray), min(yarray)), (max(xarray), max(yarray)))

    # If point is outside of bounding box, return False:
    if (point[0] < bbox[0][0] or point[0] > bbox[1][0] or point[1] < bbox[0][1] or point[1] > bbox[1][1]):
        return False

    # Point is known to be inside bounding box, make final check using winding number algorithm:
    for i in range(len(polygon) - 1):
        if (polygon[i][1] <= point[1]):                             # Polygon vertex Y <= Point Y
            if (polygon[i+1][1]  > point[1]):
                 if (is_left(polygon[i], polygon[i+1], point) > 0): # Point is left of edge
                     counter += 1
        else:                                                       # Polygon vertex Y > Point Y
            if (polygon[i+1][1] <= point[1]):
                 if (is_left(polygon[i], polygon[i+1], point) < 0): # Point is right of edge
                     counter -= 1

    if (counter == 0):
        ret = False

    return ret

#
# # Test example:
#

# A somewhat complex polygon:
wkt_geom_polygon = "Polygon ((-0.80220646178092958 -1.01168126825198179, -0.80219483697104244 -1.01166312654649992, -0.80222164760598791 -1.0116559770438478, -0.80223415923562902 -1.0116899371814454, -0.80221986023032488 -1.01171138568940155, -0.80217696321441212 -1.01171674781639065, -0.80213406619849936 -1.01170066143542337, -0.80210725556355389 -1.01167742555180418, -0.80211976719319511 -1.01162022953058717, -0.80216266420910787 -1.0115826946416635, -0.8022502456165963 -1.01157197038768532, -0.80231280376480241 -1.01161844215492414, -0.8023521260293891 -1.01172925944603187, -0.80232889014576969 -1.01177751858893372, -0.80224667086527024 -1.01181326610219435, -0.80209831868523873 -1.01183113985882467, -0.80202146153172849 -1.01178288071592282, -0.8019481791295443 -1.01168814980578237, -0.8020053751507612 -1.01156660826069622, -0.80216266420910787 -1.01150226273682708, -0.80227348150021571 -1.01150226273682708, -0.802409322050606 -1.01154873450406591, -0.80248975395544242 -1.01171496044072762, -0.80246651807182301 -1.01193123289595444, -0.80231459114046544 -1.01196876778487788, -0.80208759443126065 -1.01199379104416032, -0.80195711600785946 -1.01192765814462837, -0.80185881034639273 -1.01176321958362947, -0.80178910269553461 -1.01155945875804409, -0.80199465089678301 -1.01140395707536057, -0.8021644515847709 -1.01139144544571935, -0.80235391340505213 -1.01139323282138238, -0.8025630363576266 -1.0114522162182622, -0.80267742840006051 -1.01182935248316164, -0.80251835196605081 -1.01211890734057253, -0.80221986023032488 -1.01219397711841985, -0.80204827216667396 -1.01215644222949619, -0.80185523559506666 -1.01209924620827918, -0.80174441830395882 -1.01202238905476882, -0.80161930200754672 -1.01173462157302096, -0.80156925548898195 -1.01157911989033744, -0.80169437178539404 -1.01135212318113266, -0.80205542166932609 -1.0112699039006332, -0.80241289680193206 -1.01124488064135076, -0.80282041845310292 -1.01132888729751325, -0.802881189225646 -1.0116899371814454, -0.80282220582876596 -1.01205456181670339, -0.80262738188149563 -1.01234232929845125, -0.80233961439974788 -1.01241382432497251, -0.80205005954233699 -1.01244599708690708, -0.80183378708711039 -1.01241382432497251, -0.80164611264249219 -1.01230300703386455, -0.80175514255793701 -1.0121743159861265, -0.80212870407151027 -1.01227083427192999, -0.80230386688648725 -1.01227619639891908, -0.80243434530988844 -1.01221721300203926, -0.80261665762751755 -1.01217610336178954, -0.80278824569116836 -1.01204026281139914, -0.80286331546901568 -1.0116970866840973, -0.80280969419912473 -1.01135391055679569, -0.80259878387088723 -1.01143791721295795, -0.80241289680193206 -1.01126275439798108, -0.80226275724623752 -1.01137893381607813, -0.80205899642065215 -1.01128062815461139, -0.80193030537291399 -1.01142898033464301, -0.80188919573266426 -1.01132888729751325, -0.80170152128804617 -1.01136284743511085, -0.80177480369023035 -1.01153801025008772, -0.8016747106531007 -1.01160414314961988, -0.80164611264249219 -1.01154873450406591, -0.80160321562657944 -1.01155945875804409, -0.80166577377478554 -1.01173283419735793, -0.80175692993360004 -1.01160593052528291, -0.80180340170083886 -1.01175607008097734, -0.80174084355263275 -1.01170066143542337, -0.80168364753141585 -1.01176858171061856, -0.80179089007119764 -1.01193659502294353, -0.80180876382782795 -1.01177751858893372, -0.80189098310832729 -1.01197055516054091, -0.80182306283313221 -1.01194910665258475, -0.80193924225122915 -1.01210997046225737, -0.80193566749990308 -1.01197770466319303, -0.80220019909803153 -1.01204562493838823, -0.80217517583874909 -1.01209388408129008, -0.80203576053703274 -1.01207601032465977, -0.80204112266402183 -1.01203311330874701, -0.8019714150131636 -1.01202238905476882, -0.8019767771401527 -1.01208494720297493, -0.80199286352111998 -1.01212426946756162, -0.80206793329896731 -1.01213499372153981, -0.80214300307681452 -1.01214929272684406, -0.80221986023032488 -1.01215108010250709, -0.80223594661129205 -1.01201881430344276, -0.80232531539444363 -1.01207958507598583, -0.80238429879132356 -1.01200809004946457, -0.80242540843157328 -1.01208137245164886, -0.80249332870676837 -1.01195625615523688, -0.80261487025185452 -1.0118668873720853, -0.80252550146870294 -1.0118668873720853, -0.80253801309834416 -1.01179717972122707, -0.80260950812486542 -1.0118043292238792, -0.80259342174389814 -1.01172032256771671, -0.80253622572268113 -1.0117650069592925, -0.80253086359569203 -1.01164882754119567, -0.80258448486558298 -1.01162559165757626, -0.80255409947931144 -1.01151298699080527, -0.80250584033640959 -1.01167385080047811, -0.80247366757447514 -1.01154515975273984, -0.80250941508773566 -1.01153801025008772, -0.80251298983906172 -1.01146651522356645, -0.8023521260293891 -1.01143612983729492, -0.80242362105591025 -1.01151298699080527, -0.80224488348960721 -1.0114575783452513, -0.80230207951082422 -1.01144506671561007, -0.80213406619849936 -1.01142898033464301, -0.80199107614545695 -1.01147545210188161, -0.80193566749990308 -1.01150405011249012, -0.80208938180692368 -1.01149868798550102, -0.80189455785965336 -1.01160950527660898, -0.80188204623001214 -1.01153086074743559, -0.80182663758445827 -1.01157375776334835, -0.80194460437821824 -1.01174534582699915, -0.80197498976448967 -1.01184007673713983, -0.80205899642065215 -1.01190799701233503, -0.80218590009272728 -1.01193659502294353, -0.80229314263250906 -1.0119008475096829, -0.80234676390240001 -1.01184007673713983, -0.80240574729927994 -1.0118615252450962, -0.80233425227275879 -1.01187939900172652, -0.8023521260293891 -1.01191514651498715, -0.80241647155325813 -1.01191157176366109, -0.80243077055856238 -1.01182935248316164, -0.80238072403999749 -1.01176143220796644, -0.80243255793422541 -1.0117650069592925, -0.80245221906651876 -1.01182220298050951, -0.80246830544748604 -1.01172747207036884, -0.80238608616698659 -1.01161486740359807, -0.80231459114046544 -1.01155230925539197, -0.80222164760598791 -1.01154158500141378, -0.80208223230427156 -1.01157018301202228, -0.80202146153172849 -1.01162380428191323, -0.80202682365871758 -1.01170781093807549, -0.80208759443126065 -1.01177573121327069, -0.80213406619849936 -1.01178645546724888, -0.80218411271706425 -1.01178824284291191, -0.80225918249491146 -1.0117703690862816, -0.802289567881183 -1.01172032256771671, -0.80227526887587874 -1.01166670129782599, -0.80225203299225933 -1.01163095378456536, -0.80222164760598791 -1.01161844215492414, -0.80218411271706425 -1.01161844215492414, -0.80214479045247755 -1.01162737903323929, -0.80215730208211877 -1.01165776441951083, -0.80214836520380361 -1.01169351193277146, -0.80217696321441212 -1.01167206342481508, -0.80220646178092958 -1.01168126825198179),(-0.8019086685880964 -1.01227003708684093, -0.80211546843829507 -1.01231891705143329, -0.80209290845463699 -1.0123865970024073, -0.80202898850093929 -1.01233395704053875, -0.80194626856085982 -1.01240163699151275, -0.8017883486752535 -1.01233395704053875, -0.80192746857447805 -1.01233395704053875, -0.80180338866435885 -1.01222491711952478, -0.8019086685880964 -1.01227003708684093),(-0.80222147073090533 -1.01166225446434477, -0.80221913420779201 -1.01166588905585431, -0.80222475917084257 -1.01166909095789848, -0.80221852844254038 -1.01166718712425063, -0.80222934567917614 -1.01167930242928272, -0.80221705729835802 -1.01166770635160908, -0.80223133605071717 -1.01168449470286781, -0.80221567269206862 -1.01166848519264696, -0.80221679768467868 -1.01167835051245869, -0.80221472077524469 -1.01166874480632618, -0.80221013426691112 -1.01167809089877947, -0.80221333616895529 -1.0116679659652883, -0.80220632659961533 -1.01167367746623205, -0.80221333616895529 -1.01166588905585431, -0.80220217278074724 -1.01166727366214371, -0.80221454769945844 -1.01166415829799261, -0.8022074515922254 -1.01166147562330688, -0.80221697076046483 -1.01166415829799261, -0.80221273040370367 -1.01165948525176597, -0.80221852844254038 -1.01166363907063417, -0.80221959273487042 -1.01165673515177645, -0.80222013779984191 -1.01166243108072829, -0.80222177299475639 -1.0116569259245165, -0.80222147073090533 -1.01166225446434477),(-0.80219832664382118 -1.01168744067163008, -0.80221286041232787 -1.01170446594330921, -0.80218130137214205 -1.01171152520229812, -0.80214102207085236 -1.01169865243590662, -0.80211444603701176 -1.01167456790523858, -0.80212981030657582 -1.01162266158914349, -0.8021738268626244 -1.01158653479314142, -0.80224732620621486 -1.01157822978256617, -0.80230296977706872 -1.01162889034707493, -0.80233702032042697 -1.0117210759644597, -0.80230795278341382 -1.01176882977526694, -0.80232124080033418 -1.01172522846974711, -0.80227763949481434 -1.01178502454588859, -0.80229674101913728 -1.01173893173719631, -0.80230130877495365 -1.01167290690312339, -0.80225521596626137 -1.01160812782063703, -0.8022456652040999 -1.01159151779948653, -0.8022161824165579 -1.01159442455318782, -0.80225106346097375 -1.01161767858279839, -0.80218794538060223 -1.01159816180794659, -0.80216344559940544 -1.01161269557645328, -0.802136454315036 -1.0116247378417873, -0.80214849658037002 -1.01165588163144426, -0.8021335475613347 -1.01164010211135147, -0.80212233579705816 -1.01167207640206591, -0.80213894581820855 -1.01165671213250175, -0.8021285645549896 -1.0116778899094685, -0.80215181858460016 -1.01166003413673189, -0.80214434407508239 -1.01169699143379144, -0.80216510660152041 -1.01169989818749295, -0.8021788098689695 -1.01167830515999735, -0.80218379287531461 -1.01170695744648187, -0.80219832664382118 -1.01168744067163008),(-0.8022433482322352 -1.01178653670723451, -0.80224930376792725 -1.0117984477786186, -0.80211282274165108 -1.0118212773321047, -0.80201505269737317 -1.01175675902877416, -0.80197981577786193 -1.0116768555915725, -0.80201455640273223 -1.01158355219906371, -0.80210240055418991 -1.01153590791352732, -0.80224235564295321 -1.01151407094932311, -0.80237982925851137 -1.01154781898491142, -0.80244037720471384 -1.01163516684172827, -0.80242548836548377 -1.01164360385062513, -0.80235253305325616 -1.01155129304739844, -0.80222200756267203 -1.01153094496711726, -0.8020577340364996 -1.01156717447591049, -0.80200711198311714 -1.01163318166316407, -0.80201257122416814 -1.01171507027892993, -0.80204483037583341 -1.01176271456446631, -0.80209743760777996 -1.01179646260005462, -0.80217535586641764 -1.01180241813574656, -0.8022433482322352 -1.01178653670723451),(-0.80232754547945684 -1.01188191831216678, -0.80233532015781794 -1.01187346757481778, -0.80239109502432138 -1.01186096048354113, -0.80234850330808238 -1.01184608718580682, -0.80232044686008364 -1.01187718589925124, -0.80229408055955476 -1.01191403111409306, -0.80218388294452359 -1.01194479179804331, -0.8023299116859145 -1.01192924244132132, -0.80216833358780137 -1.01196372144970526, -0.80240292605661001 -1.01193701711968242, -0.80234478498364881 -1.01192079170397231, -0.80232754547945684 -1.01188191831216678),(-0.80212296017562135 -1.0119453696139622, -0.80209504026715461 -1.01197794284050668, -0.80197095178508027 -1.0119151230464567, -0.80181894339453919 -1.01160257518223196, -0.801846087749993 -1.01162041290153004, -0.80193217413443207 -1.01176854352700629, -0.80196629846700251 -1.01185462991144548, -0.80205471151048047 -1.01192908300068996, -0.80212296017562135 -1.0119453696139622),(-0.80194497080282157 -1.01151828371449803, -0.80203431721967655 -1.01151634140108815, -0.8019051533779189 -1.01158432237043416, -0.80189252834075464 -1.01149691826698929, -0.80194497080282157 -1.01151828371449803),(-0.80234800083537372 -1.01140854300683913, -0.80233440464150452 -1.01142311035741339, -0.80237422206640729 -1.01148720669993986, -0.80231012572388094 -1.01146292778231617, -0.80232177960434026 -1.0114211680440035, -0.80227322176909299 -1.01141631226047868, -0.80234800083537372 -1.01140854300683913),(-0.80260147273536431 -1.01163773598920614, -0.8026529440407264 -1.01180186147234186, -0.80259273232501982 -1.01169697654820778, -0.80255194374341221 -1.01172999587617607, -0.80260147273536431 -1.01163773598920614),(-0.80238432738899723 -1.012056879621412, -0.80242415765192165 -1.01210402564691426, -0.80236238010126348 -1.01214873308489062, -0.80224045072496453 -1.01212597293464812, -0.80224288931249044 -1.01206013107144677, -0.80235262575115951 -1.01210808995945767, -0.80238432738899723 -1.012056879621412),(-0.80255474239946767 -1.01222776429069206, -0.80265428980875708 -1.01217161790067323, -0.80281376884147104 -1.01202900008727692, -0.80281025608744649 -1.01205569701786358, -0.80265032576132234 -1.01229049069510668, -0.80248785443633097 -1.01229189130997721, -0.80204382817997655 -1.01242247662259688, -0.80255474239946767 -1.01222776429069206))"

# A point inside polygon:
wkt_geom_point = "Point (-0.8022201557511377 -1.01166223862933169)"

# Check and report:
print("Input point: ", wkt_geom_point, " \nPoint is inside polygon? ", point_in_polygon(wkt_geom_point, wkt_geom_polygon))
